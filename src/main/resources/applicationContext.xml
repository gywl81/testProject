<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:mybatis/mybatis.config.properties</value>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" 				value="${jdbc.driverClassName}" />
		<property name="url" 							value="${jdbc.url}" />
		<property name="username" 						value="${jdbc.username}" />
		<property name="password" 						value="${jdbc.password}" />
        <property name="initialSize" 					value="${jdbc.initialSize}"/>
        <property name="maxActive" 						value="${jdbc.maxActive}"/>
        <property name="maxIdle" 						value="${jdbc.maxIdle}"/>
        <property name="minIdle" 						value="${jdbc.minIdle}"/>
        <property name="testOnBorrow" 					value="${jdbc.testOnBorrow}"/>
        <property name="validationQuery" 				value="${jdbc.validationQuery}"/>
        <property name="timeBetweenEvictionRunsMillis"  value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="testWhileIdle" 					value="${jdbc.testWhileIdle}"/>  
        <property name="numTestsPerEvictionRun" 		value="${jdbc.numTestsPerEvictionRun}"/>        
        <property name="minEvictableIdleTimeMillis" 	value="${jdbc.minEvictableIdleTimeMillis}"/>
	</bean>
	
	<!-- transaction -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceOperation" expression="execution(public * com.sktelecom.tdrive..service.*Service.*(..))"/>
		<aop:advisor id="transactionAdvisor" advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
			<tx:method name="testSet*" rollback-for="Exception"/>
			<tx:method name="set*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/com/sktelecom/tdrive/**/sql/*.xml" />
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- [S] payload 데이터 map 형태로 mapping-->
	<bean id="messageAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
	        </list>
	    </property>
	</bean>
	<!-- [E] payload 데이터 map 형태로 mapping-->

 <!-- SpringFramworks redis session:적용시 주석 해제-->	
<!--   <context:annotation-config />
   <bean
      class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration" />
   <bean
      class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
      p:port="6379" p:hostName="127.0.0.1" />  redis server(hostName) setting --> 
 	
</beans>
